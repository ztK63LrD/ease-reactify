name: Manual Release

on:
  workflow_dispatch:
    inputs:
      target-branch:
        description: 'Target branch for release'
        required: true
        default: 'master'
        type: choice
        options:
          - master
          - dev
      release-type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      dry-run:
        description: 'Dry run (no actual publish)'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: 读取仓库内容
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target-branch }}  # 切换到目标分支
          fetch-depth: 0  # 获取完整历史，用于版本计算
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21
          registry-url: https://registry.npmjs.org/
          
      - name: 安装pnpm
        uses: pnpm/action-setup@v2
          
      - name: 安装依赖(跳过锁文件检查)
        run: pnpm install --no-frozen-lockfile

      - name: 项目测试
        run: pnpm run test

      - name: 构建项目
        run: |
          if [ "${{ inputs.target-branch }}" = "master" ]; then
            pnpm run build:prod  # master 分支使用生产环境构建
          else
            pnpm run build  # dev 分支使用开发环境构建
          fi

      - name: 检查待发布的包
        run: npx changeset status
        
      - name: 创建版本号
        run: |
          if [ "${{ inputs.dry-run }}" = "true" ]; then
            echo "Dry run mode - skipping version bump"
          else
            if [ "${{ inputs.target-branch }}" = "master" ]; then
              npx changeset version --snapshot ${{ inputs.release-type }}  # master 分支发布正式版本
            else
              npx changeset version --snapshot prerelease --preid dev  # dev 分支发布预发布版本
            fi
          fi
      
      - name: 登录到npm
        if: inputs.dry-run != 'true'
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          
      - name: 发布到npm
        if: inputs.dry-run != 'true'
        run: |
          if [ "${{ inputs.target-branch }}" = "master" ]; then
            npx changeset publish --only ease-reactify  # master 分支发布正式版本
          else
            npx changeset publish --only ease-reactify --tag dev  # dev 分支发布预发布版本
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: 完成提示
        run: |
          if [ "${{ inputs.dry-run }}" = "true" ]; then
            echo "✅ Dry run completed successfully for ${{ inputs.target-branch }} branch"
          else
            echo "✅ Release completed successfully for ${{ inputs.target-branch }} branch"
          fi
